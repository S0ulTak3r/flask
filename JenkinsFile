pipeline 
{
    agent any
    
    triggers 
    {
        pollSCM('*/5 * * * *')
    }
    
    stages 
    {
        stage('Cleanup') 
        {
            steps 
            {
                echo 'Performing cleanup...'
                sh 'rm -rf *'
            }
        }
        
        stage('Clone') 
        {
            steps 
            {
                echo 'Cloning repository...'
                sh 'git clone https://github.com/S0ulTak3r/flask.git'
                sh 'ls'
            }
        }
        
        stage('Build') 
        {
            steps 
            {
                echo 'Building...'
                echo 'Packaging...'
                sh 'tar -czvf FlaskProject.tar.gz flask'
                sh 'ls'
            }
        }
        
        stage('Upload to S3') 
        {
            steps 
            {
                withCredentials([
                    [
                        $class: 'AmazonWebServicesCredentialsBinding',
                        credentialsId: 'aws_key',
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]
                ]) {
                    sh 'aws s3 cp FlaskProject.tar.gz s3://daniel-sela/FlaskJenkins/'
                }
            }
        }
    }
}
